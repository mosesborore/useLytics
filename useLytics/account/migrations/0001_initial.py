# Generated by Django 5.2.3 on 2025-07-14 11:53

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        db_column="User_id",
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        blank=True, db_column="User_name", max_length=255, null=True
                    ),
                ),
                (
                    "phone_number",
                    models.CharField(
                        blank=True,
                        db_column="User_phone_number",
                        default="",
                        max_length=12,
                        null=True,
                        unique=True,
                        verbose_name="User Phone Number",
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        db_column="User_email",
                        max_length=254,
                        unique=True,
                        verbose_name="Email",
                    ),
                ),
                (
                    "password",
                    models.CharField(
                        blank=True,
                        db_column="User_password",
                        default="",
                        max_length=128,
                        verbose_name="password",
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        db_column="User_is_staff",
                        default=False,
                        verbose_name="Is staff",
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        db_column="User_is_superuser",
                        default=False,
                        verbose_name="Is superuser",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        db_column="User_is_active",
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "last_login",
                    models.DateTimeField(
                        auto_now=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Updated at"),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "db_table": "Users",
                "ordering": ("phone_number",),
            },
        ),
    ]
